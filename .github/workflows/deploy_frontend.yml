name: Deploy - Frontend

on:
  push:
    branches:
    - master
    paths:
    - "frontend/**"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Prepare backend for testing
      run: cd ./backend; docker-compose up -d

    - name: Install dependencies
      run: cd ./frontend; npm install
      env:
        CI: true
        
    - name: Run development server in the background
      run: cd ./frontend; nohup npm run serve &
      env:
        CI: true
        
    - name: Run E2E tests
      run: cd ./frontend; npm run test
      env:
        CI: true

    - name: Setup Tmate session
      uses: mxschmitt/action-tmate@v1
      if: failure()
      
  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v1

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - name: Build static files
      run: cd ./frontend; npm install; npm run build
      env:
        CI: true

    - name: Set up RSync
      run: sudo apt update; sudo apt install rsync

    - name: Set up RSync
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Copy files to Sylvanas
      run: cd frontend; rsync -Pav --rsync-path="sudo rsync" --delete -e "ssh -o StrictHostKeyChecking=no" dist/* ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOSTNAME }}:/var/www/takagi.bednarski.dev/

    - name: Purge CloudFlare CDN cache
      uses: jakejarvis/cloudflare-purge-action@v0.3.0
      env:
        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

    - name: Setup Tmate session
      uses: mxschmitt/action-tmate@v1
      if: failure()
